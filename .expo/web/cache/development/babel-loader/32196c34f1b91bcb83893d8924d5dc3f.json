{"ast":null,"code":"/**\n * Axios Request Wrapper\n * ---------------------\n *\n * @author  Sheharyar Naseer (@sheharyarn)\n * @license MIT\n *\n */\nimport axios from 'axios';\nvar client = axios.create({\n  baseURL: 'https://qbittorrent.gideon.ovh/api/v2/'\n});\n\nvar request = function request(options) {\n  var onSuccess = function onSuccess(response) {\n    return response.data;\n  };\n\n  var onError = function onError(error) {\n    console.debug('Request Failed:', error.config);\n\n    if (error.response) {\n      if (error.response.status === 401) {}\n\n      console.debug('Status:', error.response.status);\n      console.debug('Data:', error.response.data);\n      console.debug('Headers:', error.response.headers);\n    } else {\n      console.debug('Error Message:', error.message);\n    }\n\n    return Promise.reject(error.response || error.message);\n  };\n\n  return client(options).then(onSuccess).catch(onError);\n};\n\nexport default request;","map":{"version":3,"sources":["/home/julien/QbittorrentRemoteApp/src/services/APIKit.tsx"],"names":["axios","client","create","baseURL","request","options","onSuccess","response","data","onError","error","console","debug","config","status","headers","message","Promise","reject","then","catch"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAf;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAa;AAC3B,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAvB;AAAA,GAAlB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzBC,IAAAA,OAAO,CAACC,KAAR,CAAc,iBAAd,EAAiCF,KAAK,CAACG,MAAvC;;AACA,QAAIH,KAAK,CAACH,QAAV,EAAoB;AAClB,UAAIG,KAAK,CAACH,QAAN,CAAeO,MAAf,KAA0B,GAA9B,EAAmC,CAClC;;AACDH,MAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBF,KAAK,CAACH,QAAN,CAAeO,MAAxC;AACAH,MAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuBF,KAAK,CAACH,QAAN,CAAeC,IAAtC;AACAG,MAAAA,OAAO,CAACC,KAAR,CAAc,UAAd,EAA0BF,KAAK,CAACH,QAAN,CAAeQ,OAAzC;AACD,KAND,MAMO;AACLJ,MAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgCF,KAAK,CAACM,OAAtC;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAeR,KAAK,CAACH,QAAN,IAAkBG,KAAK,CAACM,OAAvC,CAAP;AACD,GAZD;;AAcA,SAAOf,MAAM,CAACI,OAAD,CAAN,CAAgBc,IAAhB,CAAqBb,SAArB,EAAgCc,KAAhC,CAAsCX,OAAtC,CAAP;AACD,CAlBD;;AAoBA,eAAeL,OAAf","sourcesContent":["/**\n * Axios Request Wrapper\n * ---------------------\n *\n * @author  Sheharyar Naseer (@sheharyarn)\n * @license MIT\n *\n */\n\nimport axios from 'axios';\n\nconst client = axios.create({\n  baseURL: 'https://qbittorrent.gideon.ovh/api/v2/',\n});\n\nconst request = (options) => {\n  const onSuccess = (response) => response.data;\n\n  const onError = (error) => {\n    console.debug('Request Failed:', error.config); // eslint-disable-line no-console\n    if (error.response) {\n      if (error.response.status === 401) {\n      }\n      console.debug('Status:', error.response.status); // eslint-disable-line no-console\n      console.debug('Data:', error.response.data); // eslint-disable-line no-console\n      console.debug('Headers:', error.response.headers); // eslint-disable-line no-console\n    } else {\n      console.debug('Error Message:', error.message); // eslint-disable-line no-console\n    }\n    return Promise.reject(error.response || error.message);\n  };\n\n  return client(options).then(onSuccess).catch(onError);\n};\n\nexport default request;\n"]},"metadata":{},"sourceType":"module"}
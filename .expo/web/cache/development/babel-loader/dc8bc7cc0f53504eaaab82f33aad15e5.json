{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/julien/QbittorrentRemoteApp/src/components/Card.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Avatar, Button, Card, Title, Paragraph, ProgressBar, Colors } from 'react-native-paper';\n\nvar LeftContent = function LeftContent(props) {\n  return React.createElement(Avatar.Icon, _extends({}, props, {\n    icon: \"folder\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 30\n    }\n  }));\n};\n\nvar TorrentCard = function TorrentCard(_ref) {\n  var children = _ref.children;\n\n  var _onPressed = function _onPressed(_ref2) {\n    var type, data;\n    return _regeneratorRuntime.async(function _onPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            type = _ref2.type, data = _ref2.data;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(authServices.getBeerInfos({\n              product_id: data\n            }).then(function (data) {\n              return handleBeeInfos(data);\n            }).catch(function (error) {\n              setIsLoading(false);\n              alert(\"Bar code with type and data \" + error.data + \" has been scanned!\");\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Card, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Card.Title, {\n    title: \"Card Title\",\n    subtitle: \"Card Subtitle\",\n    left: LeftContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"torrent title\"), React.createElement(Paragraph, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.torrentSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"0/10 GB\"), React.createElement(Text, {\n    style: styles.torrentPercentage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"  .  x%\"), React.createElement(Text, {\n    style: styles.torrentCategory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, '\\t', \"jeux\"))), React.createElement(ProgressBar, {\n    progress: 0.75,\n    color: Colors.black,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    onpress: function onpress() {\n      return _onPressed;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  card: {\n    margin: 10,\n    padding: 10,\n    elevation: 104,\n    color: Colors.red800,\n    justifyContent: \"center\"\n  },\n  statusBar: {\n    color: 'blue'\n  },\n  torrentSize: {\n    color: 'grey'\n  },\n  torrentPercentage: {},\n  torrentCategory: {\n    backgroundColor: 'dodgerblue',\n    borderRadius: 100000\n  }\n});\nexport default memo(TorrentCard);","map":{"version":3,"sources":["/home/julien/QbittorrentRemoteApp/src/components/Card.tsx"],"names":["React","memo","Avatar","Button","Card","Title","Paragraph","ProgressBar","Colors","LeftContent","props","TorrentCard","children","_onPressed","type","data","authServices","getBeerInfos","product_id","then","handleBeeInfos","catch","error","setIsLoading","alert","styles","card","torrentSize","torrentPercentage","torrentCategory","black","StyleSheet","create","margin","padding","elevation","color","red800","justifyContent","statusBar","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { StyleSheet, Text } from 'react-native';\nimport { Avatar, Button, Card, Title, Paragraph, ProgressBar, Colors, Surface } from 'react-native-paper';\n\nconst LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst TorrentCard = ({ children }: Props) => {\n  const _onPressed = async ({ type, data }) => {\n    await authServices.getBeerInfos(\n      { product_id: data},\n    )\n      .then((data) => handleBeeInfos(data))\n      .catch((error) => {    setIsLoading(false);\n        alert(`Bar code with type and data ${error.data} has been scanned!`)});\n  }; \n  return (\n    <Card style={styles.card}>\n    <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent}/>\n    <Card.Content>\n      <Title>torrent title</Title>\n      <Paragraph>\n      <Text style={styles.torrentSize}>\n      0/10 GB\n      </Text>\n      <Text style={styles.torrentPercentage}>  .  x% \n      </Text>\n      <Text style={styles.torrentCategory}>{'\\t'}jeux\n      </Text>\n      </Paragraph>\n    </Card.Content>\n    <ProgressBar progress={0.75} color={Colors.black} />\n    <Button onpress={() => _onPressed} />\n  </Card>\n  )\n  };\n\nconst styles = StyleSheet.create({\n    card: {\n        margin: 10,\n        padding: 10,\n        elevation: 104,\n        color: Colors.red800,\n        justifyContent:\"center\",\n    },\n    statusBar: {\n        color: 'blue'\n    },\n    torrentSize:{\n      color: 'grey'\n    },\n    torrentPercentage:{\n      \n    },\n    torrentCategory:{\n      backgroundColor: 'dodgerblue',\n      borderRadius: 100000\n    },\n  });\n\nexport default memo(TorrentCard);\n\n\n"]},"metadata":{},"sourceType":"module"}